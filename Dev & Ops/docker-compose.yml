# This docker-compose.yml file is taken from "Bookstore Web Service" project,
# and creates five images, one for Nginx, one for a Flask app running
# "bookstore" web service, one for a Flask app running the related
# authentication service, one for rate-limiting key-value store, and one for
# postgreSQL database.

version: "3.7"

services:

  nginx:
    depends_on:
      - flask
    build: ./nginx_web_server
    ports:
      # Bind container port 80 to the host port 80
      - "80:80"
    restart: always

  flask:
    depends_on:
      - auth_service
      - db
      - rate-limiting
    build: ./bookstore_service
    expose:
      # Since we'll use Gunicorn to run the application, we need to expose its
      # default port 8000, rather than the default port 5000 of Flask
      # development server.
      - 8000
      # Note that this port is only exposed to other services in the same
      # network, but not to outside world
    restart: always

  auth_service:
    depends_on:
      - db
    build: ./auth_service
    expose:
      - 8000
    restart: always

  db:  # Note that this is also the hostname of the "db" service container
    image: postgres:9.6
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=bookstore
    # Persist the data stored in the database into a Docker volume
    volumes:
      - db_volume:/var/lib/postgresql/data
    expose:
      - 5432
      # Note that this port is only exposed to other services in the same
      # network, but not to outside world
    restart: always

  rate-limiting:  # Note that this is also the hostname of the "rate-limiting" service container
    image: redis
    expose:
      - 6379
      # Note that this port is only exposed to other services in the same
      # network, but not to outside world
    restart: always

volumes:
  db_volume:
